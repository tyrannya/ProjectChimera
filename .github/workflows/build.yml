# .github/workflows/build.yml
#
# ▸ Job **build**     — собирает образ Freqtrade-бота  ➜ ghcr.io/<owner>/bot:latest
# ▸ Job **build-nn**  — собирает BentoML-сервис NN     ➜ ghcr.io/<owner>/nn_infer:latest
# Оба запускаются при push-ах в ветку main и вручную через “Run workflow”.

name: Build & Push Docker

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
# ──────────────────────────────── 1) Бот (freqtrade-core) ───────────────────────────────
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write        # push в GHCR
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push bot image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile             # корневой Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/bot:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/bot:latest
          cache-from: type=gha
          cache-to:   type=gha,mode=max

# ──────────────────────────────── 2) NN-сервис (BentoML) ────────────────────────────────
  build-nn:
    runs-on: ubuntu-latest
    needs: build                     # запускаем после основного образа
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push nn_infer image
        uses: docker/build-push-action@v5
        with:
          context: nn
          file: nn/Dockerfile.nn_infer
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/nn_infer:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/nn_infer:latest
          cache-from: type=gha
          cache-to:   type=gha,mode=max
